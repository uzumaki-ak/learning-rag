I go by uzumaki-ak online, though sometimes people call me pookie. I’m a fullstack developer who writes JavaScript most of the time. React is something I paused for a while but eventually picked up again. I have built countless projects, some complete, some abandoned. I like working with Node.js, MongoDB, PostgreSQL, and even Neon serverless setups. Sometimes I use Drizzle ORM just because it feels clean. I’ve struggled with Puppeteer when bulk requests started failing. CAPTCHAs feel like roadblocks more than security. I once built a semantic search app with Upstash, and it used movie data as the base. GreenMindAi is another project I’m proud of; it incentivizes recycling. The platform rewards users with points for disposing responsibly. It connects waste collectors with businesses and ensures fair wages for trash pickers. The goal is social equity combined with environmental care. I like gradient backgrounds and spend too long tweaking Tailwind CSS. Testimonial sliders built with SwiperJS look smooth when I get them right. Leaderboards with search inputs and tables keep users engaged. I once made a button with a circular arrow because a flat one looked boring. Hover animations on navbars sometimes drive me mad. The “Log In” tab once broke everything. Dark mode issues are common in my work, especially unreadable text. Icons often overlap words if I don’t give them enough spacing. I like modern UIs, but my code doesn’t always stay clean. Background animations are fun to experiment with, like images moving slowly on refresh. I created a component called Extrathings just to play with that. CTA sections can be a nightmare when grid ordering doesn’t work. Tailwind’s order-first sometimes refuses to behave. Responsive tweaks for large screens feel endless. I once styled a testimonial section with half yellow and half black backgrounds. Instead of text, I used an image named rajtestm.jpg. Most of my assets live inside /public/images/. Fixing image paths has wasted hours of my time. Multer helps me manage profile picture uploads. I’ve built CRUD APIs just for user images. Forgetting .env variables has broken my projects more than once. My friend once had a working setup while mine kept failing. Visual Studio Code is my everyday companion, though my workspace is often messy. Sometimes I design pages where scrolling is disabled on purpose. Hero inputs need to be wide, especially on large screens. Animated placeholders like “paste a link” give life to dull input fields. Gradient borders on buttons look stylish until hover states ruin them. I like adding small scattered divs with gradient hover text for flair. A 40x40 video box once sat under my input field just because I could. Social media icons on my Home component had to be nudged slightly upward. Navbars frustrate me when alignment gets off balance. Buttons sometimes come out too wide, like in my Reward component. Placing search, bell, and user icons on the right side of a box took me ages to balance. I also enjoy designing breadcrumb navigation like Home/Blog/Article Title. My folder structures are chaotic: frontend-app, fba, backend-blog-app, you name it. Assets inside public/images are scattered. I have used Tiptap for blog editing and extensions live in constants. I fixed camera icon alignment once by just using inset-0. Sometimes fixes are that stupidly simple. I’ve worked with SwiperJS pagination dots that never aligned properly. I made Prepers and Faltuchiz components just for
Education
 8744003734 
Anikesh Kumar
 GitHub
 Dwarka, New Delhi
 anikeshuzumaki@gmail.com 
LinkedIn 
MERI College of Engineering and Technology
 Bachelor of Technology in Computer Science and Engineering
 Professional Experience
 Sep 2023– Sep 2027
 New Delhi, India
 Hack4Brahma Community
 Full Stack Developer Intern
 Apr 2025– Oct 2025
 Remote
 • Engineered digital badge generator serving 500+ users with camera integration, file upload functionality, and real-time
 preview reducing processing time by 80%
 • Implemented high-resolution image downloads using html2canvas library achieving 99% success rate and integrated social
 sharing features increasing user engagement by 45%
 • Built responsive UI components using TailwindCSS, Framer Motion animations, and Lucide icons optimizing cross-device
 compatibility and user experience
 BizByte Startup
 Frontend Developer
 Dec 2024– Apr 2025
 Freelance
 • Developed responsive web applications for 1000+ concurrent users using Next.js, TypeScript, and Shadcn UI components
 for mobile and desktop platforms
 • Integrated 15+ RESTful APIs with efficient state management reducing load time by 40% to ensure optimal data flow
 and application scalability
 • Collaborated with 6-member development teams using Git/GitHub for version control, code reviews, and project
 management maintaining zero deployment failures
 Technical Projects
 Ask My Repo | Next.js, TypeScript, RAG, Gemini API
 April 2025
 • Constructed Git repository assistant processing 10,000+ commits using Next.js and Shadcn UI to help developers track
 commits and analyze codebase changes
 • Implemented RAG (Retrieval Augmented Generation) with vector database achieving 95% query accuracy for precise
 data retrieval and code pattern recognition
 • Integrated GitHub API with private repository support enabling users to search across 50+ repository formats through
 natural language queries and commit history analysis
 Kaamly Task Automation Platform | Next.js, TypeScript, Python, Resend, OpenStreetMap, Twilio
 July 2025
 • Developed AI-powered task management platform handling 200+ daily active users with voice agent integration, NLP
 processing, and LLM-based task automation
 • Built multi-channel notification system processing 1000+ daily interactions with real-time voice calls, email automation
 via Resend API, and location-based services using OpenStreetMap
 • Designed secure backend architecture using Supabase with user authentication achieving 99.9% uptime and optimized
 APIs for task management workflows with sub-200ms response times
 Content Management System | MongoDB, React, JavaScript, Node.js, Express
 October 2024
 • Built full-stack blog platform supporting 300+ registered users using MERN stack with user authentication, post
 creation, and 3-level nested commenting system
 • Implemented role-based admin controls with 5-tier permissions managing 500+ posts reducing content moderation time
 by 60% for user management
 • Added content recommendation engine with pagination achieving 25% increase in page views and responsive design for
 optimal user experience across devices
 Technical Skills
 Languages: JavaScript, TypeScript, Python, C, C++
 Frameworks/Libraries: Next.js, React, React-Native, Node, Express, Tailwind, GraphQL, Chart.js, AIML,
 Gen-AI,HTML,CSS
 Databases: PostgreSQL, Supabase,MongoDB,Prisma,Firebase
 Developer Tools: Git, Docker, VS Code, Postman, ThunderClient, Vercel,Render,GCP, Figma, GitHub, JWT, NPM
 Achievements
 • Participated in 30+ hackathons with 20+ finalist positions and multiple wins including NSUT and Avinya competitions
 • Secured internship opportunities at 5 different organizations through hackathon performance and technical
 demonstrations
 anikesh also known as uzumaki-ak 
 anikesh linkedin:https://www.linkedin.com/in/anikesh-kumar-1b87b42a5/
 anikesh instagram:https://www.instagram.com/anikeshiro/
 anikesh git/github :https://github.com/uzumaki-ak
 