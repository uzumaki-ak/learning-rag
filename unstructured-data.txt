I go by uzumaki-ak online, though sometimes people call me pookie. I’m a fullstack developer who writes JavaScript most of the time. React is something I paused for a while but eventually picked up again. I have built countless projects, some complete, some abandoned. I like working with Node.js, MongoDB, PostgreSQL, and even Neon serverless setups. Sometimes I use Drizzle ORM just because it feels clean. I’ve struggled with Puppeteer when bulk requests started failing. CAPTCHAs feel like roadblocks more than security. I once built a semantic search app with Upstash, and it used movie data as the base. GreenMindAi is another project I’m proud of; it incentivizes recycling. The platform rewards users with points for disposing responsibly. It connects waste collectors with businesses and ensures fair wages for trash pickers. The goal is social equity combined with environmental care. I like gradient backgrounds and spend too long tweaking Tailwind CSS. Testimonial sliders built with SwiperJS look smooth when I get them right. Leaderboards with search inputs and tables keep users engaged. I once made a button with a circular arrow because a flat one looked boring. Hover animations on navbars sometimes drive me mad. The “Log In” tab once broke everything. Dark mode issues are common in my work, especially unreadable text. Icons often overlap words if I don’t give them enough spacing. I like modern UIs, but my code doesn’t always stay clean. Background animations are fun to experiment with, like images moving slowly on refresh. I created a component called Extrathings just to play with that. CTA sections can be a nightmare when grid ordering doesn’t work. Tailwind’s order-first sometimes refuses to behave. Responsive tweaks for large screens feel endless. I once styled a testimonial section with half yellow and half black backgrounds. Instead of text, I used an image named rajtestm.jpg. Most of my assets live inside /public/images/. Fixing image paths has wasted hours of my time. Multer helps me manage profile picture uploads. I’ve built CRUD APIs just for user images. Forgetting .env variables has broken my projects more than once. My friend once had a working setup while mine kept failing. Visual Studio Code is my everyday companion, though my workspace is often messy. Sometimes I design pages where scrolling is disabled on purpose. Hero inputs need to be wide, especially on large screens. Animated placeholders like “paste a link” give life to dull input fields. Gradient borders on buttons look stylish until hover states ruin them. I like adding small scattered divs with gradient hover text for flair. A 40x40 video box once sat under my input field just because I could. Social media icons on my Home component had to be nudged slightly upward. Navbars frustrate me when alignment gets off balance. Buttons sometimes come out too wide, like in my Reward component. Placing search, bell, and user icons on the right side of a box took me ages to balance. I also enjoy designing breadcrumb navigation like Home/Blog/Article Title. My folder structures are chaotic: frontend-app, fba, backend-blog-app, you name it. Assets inside public/images are scattered. I have used Tiptap for blog editing and extensions live in constants. I fixed camera icon alignment once by just using inset-0. Sometimes fixes are that stupidly simple. I’ve worked with SwiperJS pagination dots that never aligned properly. I made Prepers and Faltuchiz components just for